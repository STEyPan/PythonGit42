first = int(input(f"Введите первое число: "))
second = int(input(f"Введите первое число: "))

print(f"{first} + {second} = {first + second}")
print(f"{first} - {second} = {first - second}")
print(f"{first} * {second} = {first * second}")
print(f"{first} / {second} = {first / second}")
print(f"{first} ^ {second} = {first ** second}")


#Code convension - Конвенция о коде
#Общие правила Именования (ОПИ)
#   Технические правила (Связаны с синтаксисом языка):
#       1. НЕ называть переменные ключевыми словами языка
#       2. НЕ используются знаки препинания (исключая _ и - (как стиль языка))
#       3. НЕ начинать имя с цифры (цифры лучше не использовать)
#   НеТехнические правила:
#       1. Можно использовать ТОЛЬКО Английский язык (без транслита)
#       2. Название НЕ ДОЛЖНО быть слишком длинным
#       3. Название НЕ ДОЛЖНО быть слишком коротким (НЕ МЕНЕЕ 3 символов)
#       4. Название ДОЛЖНО кратко описывать называемую сущность
#       5. Не рекомендуется использовать глаголы в качестве имен (только как префикс - sendImage)


# Ветвление
# Синтаксис if <условие>:
# Расширение 1 - else:
# Расширение 1 - elif <условие>:
# ВАЖНО - ОБЯЗАТЕЛЬНЫМ является блок if - нельзя описать else и elif без if
# Условие так или иначе обязано сводится к True или False

# Циклы
# Синтаксис while <условие>:
# ВАЖНО - выполняться будет пока условие True
# ВАЖНО - while не контролирует никакие переменные внутри себя при переходе между итерациями
# ВАЖНО - с циклом while можно использовать ключевое слово else

# <Условие>: может составным и в Python для этого используются ключевые слова -
# and и or

# Цикл For
# Синтаксис for <условие> in <range>:
# Пример 1 - for i in range(0,10):
# Пример 2 - for item in array:
# ВАЖНО - цикл for в Python является всегда range-base циклом, то есть его <переменная>
# всегда изменяется на переходе между итерациями и ВНЕ зависимости от ее изменений
# внутри тела цикла, примет следующее значение из указанного <range>

# Момент 1 - тело цикла и ветви ветвления
# После ':' идет ОБЯЗАТЕЛЬНЫЙ переход на новую строку и ОБЯЗАТЕЛЬНЫЙ отступ от левого края
# на 1 TAB. Это правило относится ко всем ситуациям, когда нужно выделить область кода.
# То есть ли создается вложенный цикл или вложенное ветвление - ОБЯЗАТЕЛЬНО необходимо
# делать отступ от левого края, так как именно по этому признаку Python увидит и поймет
# границы тела цикла или ветви ветвления

# Момент 2 - ключевые слова циклов
# break - ключевое слово которое вызывает моментальное прерывание выполнения цикла
# continue - ключевое слово которое немедленно вызывает переход к следующей итерации цикла (как бы пропускает итерацию)